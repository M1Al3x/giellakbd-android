apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: 'local.gradle'
apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.android.inputmethod.latin"
//        applicationId "se.brendan.testkbd"
        minSdkVersion 21
        targetSdkVersion 28

        versionCode app.versionCode
        versionName app.versionName
    }

//    signingConfigs {
//        release {
//            storeFile rootProject.file(app.storeFile)
//            keyAlias app.keyAlias
//            storePassword System.getenv("STORE_PW")
//            keyPassword System.getenv("KEY_PW")
//        }
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
//            signingConfig signingConfigs.release
        }
    }

    aaptOptions.additionalParameters("--rename-manifest-package", app.packageName)

    lintOptions {
        checkReleaseBuilds false
    }
}

cargo {
    module = "../../hfst-ospell-rs"
    targets = ["arm", "arm64"]
    libname = "hfstospell"
    apiLevel = 21

//    defaultToolchainBuildPrefixDir = com.sun.jna.Platform.RESOURCE_PREFIX
    profile = 'release'
    verbose = true
}

dependencies {
    implementation "androidx.legacy:legacy-support-v4:$legacySupportVersion"
    implementation "io.sentry:sentry-android:$sentryVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "net.java.dev.jna:jna:4.5.2@aar"
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation "org.jetbrains.anko:anko-commons:$ankoVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    implementation "android.arch.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "android.arch.navigation:navigation-ui-ktx:$navigationVersion"

    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"

    implementation "com.google.android.material:material:$materialVersion"

    // Android Kotlin Extensions
    implementation "androidx.core:core-ktx:$ktxVersion"
}
repositories {
    mavenCentral()
    maven {
        url "./maven-repo"
    }
}

afterEvaluate {
    // The `cargoBuild` task isn't available until after evaluation.
    android.applicationVariants.all { variant ->
        def productFlavor = ""
        variant.productFlavors.each {
            productFlavor += "${it.name.capitalize()}"
        }
        def buildType = "${variant.buildType.name.capitalize()}"
        tasks["generate${productFlavor}${buildType}Assets"].dependsOn(tasks["cargoBuild"])
    }
}